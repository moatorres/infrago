---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infrago-rotational
  # namespace: localdev
spec:
  selector:
    matchLabels:
      app: infrago-rotational
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: infrago-rotational
    spec:
      terminationGracePeriodSeconds: 120
      containers:
        - name: infrago-rotational
          image: docker.io/moatorres/infrago-rotational
          imagePullPolicy: IfNotPresent
          env:
            - name: 'PORT'
              value: '3000'
          resources:
            requests:
              memory: '64Mi'
              cpu: '250m'
            limits:
              memory: '64Mi'
              cpu: '250m'
          ports:
            - containerPort: 80
          lifecycle:
            postStart:
              exec:
                command: ['/bin/sh', '-c', 'echo infrago-rotational started']
            preStop:
              exec:
                command: ['/bin/sh', '-c', 'echo infrago-rotational stopped']
          readinessProbe:
            httpGet:
              port: 3000
              path: /health
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 3

---
apiVersion: v1
kind: Service
metadata:
  name: infrago-rotational
spec:
  selector:
    app: infrago-rotational
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: infrago-rotational-ingress
  labels:
    name: infrago-rotational-ingress
spec:
  ingressClassName: 'gce'
  rules:
    - http:
        paths:
          - pathType: ImplementationSpecific
            path: '/'
            backend:
              service:
                name: infrago-rotational
                port:
                  number: 3000
